# -*- coding: utf-8 -*-
"""Random forest classification and deployment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k1KSewlYwq0sn9ChuJhyQdf9aW0AC7nX

# **Random forest classifier**

importing required libraries
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import pickle

"""setting max rows and max column option in pandas"""

pd.set_option('display.max_rows',100)
pd.set_option('display.max_columns',100)

"""importing dataset"""

dataset=pd.read_csv('Social_Network_Ads.csv')
dataset.head(10)

"""info of dataset"""

dataset.info()

"""splitiing dataset into dependent and independent variables"""

x=dataset.iloc[:,:-1].values
y=dataset.iloc[:,-1].values

"""splitting dataset into train and test"""

from sklearn.model_selection import train_test_split
x_train0,x_test0,y_train0,y_test0=train_test_split(x,y,test_size=0.2,stratify=y,random_state=0)

"""setting seed using random state parameter,stratify parameter to have equal ratio of different vategories in train and test

feature scaling
"""

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train=sc.fit_transform(x_train0)
x_test=sc.transform(x_test0)

"""training random forest classifier"""

from sklearn.ensemble import RandomForestClassifier
rfc=RandomForestClassifier(n_estimators=15,criterion='entropy',random_state=0,max_depth=3)
rfc.fit(x_train,y_train0)

"""predicting test set"""

y_pred=rfc.predict(x_test)

"""making confusion matrix and printing accuracy score"""

from sklearn.metrics import confusion_matrix,accuracy_score
print(confusion_matrix(y_test0,y_pred))
accuracy_score(y_test0,y_pred)

# Saving model to disk
pickle.dump(rfc, open('model.pkl','wb'))

# Loading model to compare the results
model = pickle.load(open('model.pkl','rb'))

pickle.dump(sc,open('scaling.pkl','wb'))
scaling=pickle.load(open('scaling.pkl','rb'))

